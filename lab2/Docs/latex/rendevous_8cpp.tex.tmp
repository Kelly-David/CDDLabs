\hypertarget{rendevous_8cpp}{}\section{rendevous.\+cpp File Reference}
\label{rendevous_8cpp}\index{rendevous.\+cpp@{rendevous.\+cpp}}


A Documented file.  


{\ttfamily \#include \char`\"{}Semaphore.\+h\char`\"{}}\\*
{\ttfamily \#include $<$iostream$>$}\\*
{\ttfamily \#include $<$thread$>$}\\*
Include dependency graph for rendevous.\+cpp\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void {\bfseries task\+One} (std\+::shared\+\_\+ptr$<$ \hyperlink{classSemaphore}{Semaphore} $>$ one\+Arrived, std\+::shared\+\_\+ptr$<$ \hyperlink{classSemaphore}{Semaphore} $>$ two\+Arrived)\hypertarget{rendevous_8cpp_ae1cf850bad93399b56216e792f8ae7da}{}\label{rendevous_8cpp_ae1cf850bad93399b56216e792f8ae7da}

\item 
void {\bfseries task\+Two} (std\+::shared\+\_\+ptr$<$ \hyperlink{classSemaphore}{Semaphore} $>$ one\+Arrived, std\+::shared\+\_\+ptr$<$ \hyperlink{classSemaphore}{Semaphore} $>$ two\+Arrived)\hypertarget{rendevous_8cpp_ab0f68e4601831c4f9fa4c4522d33bcb6}{}\label{rendevous_8cpp_ab0f68e4601831c4f9fa4c4522d33bcb6}

\item 
int \hyperlink{rendevous_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{main} (void)
\begin{DoxyCompactList}\small\item\em The eponymous main function. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
A Documented file. 



\subsection{Function Documentation}
\index{rendevous.\+cpp@{rendevous.\+cpp}!main@{main}}
\index{main@{main}!rendevous.\+cpp@{rendevous.\+cpp}}
\subsubsection[{\texorpdfstring{main(void)}{main(void)}}]{\setlength{\rightskip}{0pt plus 5cm}int main (
\begin{DoxyParamCaption}
\item[{void}]{}
\end{DoxyParamCaption}
)}\hypertarget{rendevous_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{}\label{rendevous_8cpp_a840291bc02cba5474a4cb46a9b9566fe}


The eponymous main function. 

Forks two threads and a shared semaphore Assigns a task to each thread Then joins both threads with the main thread $<$ Launch the threads 